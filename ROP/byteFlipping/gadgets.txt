


Gadgets
=======


0x000000000040114c: adc al, byte ptr [rax]; call qword ptr [rip + 0x2e83]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x00000000004011be: adc dword ptr [rax], edi; test rax, rax; je 0x31d0; mov edi, 0x404058; jmp rax; 
0x0000000000401150: adc eax, 0x2e83; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040117c: adc edi, dword ptr [rax]; test rax, rax; je 0x3190; mov edi, 0x404058; jmp rax; 
0x00000000004011ec: adc edx, dword ptr [rbp + 0x48]; mov ebp, esp; call 0x3170; mov byte ptr [rip + 0x2e7b], 1; pop rbp; ret; 
0x0000000000401154: add ah, dh; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040125a: add al, ch; ret; 
0x000000000040114e: add bh, bh; adc eax, 0x2e83; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000401258: add byte ptr [rax], al; add al, ch; ret; 
0x0000000000401389: add byte ptr [rax], al; add byte ptr [rax], al; call 0x3110; nop; leave; ret; 
0x0000000000401234: add byte ptr [rax], al; add byte ptr [rax], al; call 0x3244; mov eax, 0; leave; ret; 
0x000000000040115c: add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x000000000040123e: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x000000000040117e: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x3190; mov edi, 0x404058; jmp rax; 
0x00000000004011c0: add byte ptr [rax], al; add byte ptr [rax], al; test rax, rax; je 0x31d0; mov edi, 0x404058; jmp rax; 
0x0000000000401230: add byte ptr [rax], al; add byte ptr [rax], bh; call 0x3244; mov eax, 0; leave; ret; 
0x000000000040123a: add byte ptr [rax], al; add byte ptr [rax], bh; leave; ret; 
0x0000000000401056: add byte ptr [rax], al; add cl, ch; ret 0xffff; 
0x000000000040123f: add byte ptr [rax], al; add cl, cl; ret; 
0x000000000040138b: add byte ptr [rax], al; call 0x3110; nop; leave; ret; 
0x0000000000401236: add byte ptr [rax], al; call 0x3244; mov eax, 0; leave; ret; 
0x000000000040115e: add byte ptr [rax], al; endbr64; ret; 
0x0000000000401153: add byte ptr [rax], al; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401352: add byte ptr [rax], al; je 0x335b; call 0x30c0; leave; ret; 
0x0000000000401418: add byte ptr [rax], al; je 0x3421; call 0x30c0; leave; ret; 
0x0000000000401510: add byte ptr [rax], al; je 0x3519; call 0x30c0; leave; ret; 
0x0000000000401240: add byte ptr [rax], al; leave; ret; 
0x0000000000401231: add byte ptr [rax], al; mov eax, 0; call 0x3244; mov eax, 0; leave; ret; 
0x000000000040123b: add byte ptr [rax], al; mov eax, 0; leave; ret; 
0x000000000040129d: add byte ptr [rax], al; mov rdi, rax; call 0x3100; nop; pop rbp; ret; 
0x000000000040125e: add byte ptr [rax], al; nop; pop rbp; ret; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x3016; call rax; 
0x000000000040100d: add byte ptr [rax], al; test rax, rax; je 0x3016; call rax; add rsp, 8; ret; 
0x0000000000401180: add byte ptr [rax], al; test rax, rax; je 0x3190; mov edi, 0x404058; jmp rax; 
0x00000000004011c2: add byte ptr [rax], al; test rax, rax; je 0x31d0; mov edi, 0x404058; jmp rax; 
0x0000000000401387: add byte ptr [rax], bh; call 0x3110; nop; leave; ret; 
0x0000000000401232: add byte ptr [rax], bh; call 0x3244; mov eax, 0; leave; ret; 
0x000000000040123c: add byte ptr [rax], bh; leave; ret; 
0x0000000000401386: add byte ptr [rax], dil; call 0x3110; nop; leave; ret; 
0x00000000004011fb: add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000401152: add byte ptr cs:[rax], al; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401058: add cl, ch; ret 0xffff; 
0x0000000000401241: add cl, cl; ret; 
0x000000000040114d: add dil, dil; adc eax, 0x2e83; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040100a: add eax, 0x2fd1; test rax, rax; je 0x3016; call rax; 
0x0000000000401513: add eax, 0xfffba7e8; dec ecx; ret; 
0x000000000040141b: add eax, 0xfffc9fe8; dec ecx; ret; 
0x0000000000401355: add eax, 0xfffd65e8; dec ecx; ret; 
0x0000000000401017: add esp, 8; ret; 
0x0000000000401016: add rsp, 8; ret; 
0x0000000000401385: and dword ptr [rax], eax; mov eax, 0; call 0x3110; nop; leave; ret; 
0x000000000040134f: and eax, 0x28; je 0x335b; call 0x30c0; leave; ret; 
0x0000000000401415: and eax, 0x28; je 0x3421; call 0x30c0; leave; ret; 
0x000000000040150d: and eax, 0x28; je 0x3519; call 0x30c0; leave; ret; 
0x0000000000401356: call 0x30c0; leave; ret; 
0x00000000004012a2: call 0x3100; nop; pop rbp; ret; 
0x000000000040138d: call 0x3110; nop; leave; ret; 
0x00000000004011f1: call 0x3170; mov byte ptr [rip + 0x2e7b], 1; pop rbp; ret; 
0x0000000000401238: call 0x3244; mov eax, 0; leave; ret; 
0x000000000040114f: call qword ptr [rip + 0x2e83]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401014: call rax; 
0x0000000000401014: call rax; add rsp, 8; ret; 
0x0000000000401163: cli; ret; 
0x000000000040151f: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x2fd1]; test rax, rax; je 0x3016; call rax; 
0x000000000040135a: dec ecx; ret; 
0x0000000000401160: endbr64; ret; 
0x000000000040151c: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000401000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x2fd1]; test rax, rax; je 0x3016; call rax; 
0x0000000000401155: hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fd1; test rax, rax; je 0x3016; call rax; 
0x0000000000401012: je 0x3016; call rax; 
0x0000000000401012: je 0x3016; call rax; add rsp, 8; ret; 
0x000000000040117b: je 0x3190; mov eax, 0; test rax, rax; je 0x3190; mov edi, 0x404058; jmp rax; 
0x0000000000401185: je 0x3190; mov edi, 0x404058; jmp rax; 
0x00000000004011bd: je 0x31d0; mov eax, 0; test rax, rax; je 0x31d0; mov edi, 0x404058; jmp rax; 
0x00000000004011c7: je 0x31d0; mov edi, 0x404058; jmp rax; 
0x0000000000401354: je 0x335b; call 0x30c0; leave; ret; 
0x000000000040141a: je 0x3421; call 0x30c0; leave; ret; 
0x0000000000401512: je 0x3519; call 0x30c0; leave; ret; 
0x000000000040103d: jmp qword ptr [rsi - 0x70]; 
0x000000000040118c: jmp rax; 
0x0000000000401242: leave; ret; 
0x00000000004011f6: mov byte ptr [rip + 0x2e7b], 1; pop rbp; ret; 
0x0000000000401388: mov eax, 0; call 0x3110; nop; leave; ret; 
0x0000000000401233: mov eax, 0; call 0x3244; mov eax, 0; leave; ret; 
0x000000000040123d: mov eax, 0; leave; ret; 
0x000000000040117d: mov eax, 0; test rax, rax; je 0x3190; mov edi, 0x404058; jmp rax; 
0x00000000004011bf: mov eax, 0; test rax, rax; je 0x31d0; mov edi, 0x404058; jmp rax; 
0x0000000000401009: mov eax, dword ptr [rip + 0x2fd1]; test rax, rax; je 0x3016; call rax; 
0x00000000004011ef: mov ebp, esp; call 0x3170; mov byte ptr [rip + 0x2e7b], 1; pop rbp; ret; 
0x0000000000401149: mov edi, 0x401216; call qword ptr [rip + 0x2e83]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401187: mov edi, 0x404058; jmp rax; 
0x00000000004012a0: mov edi, eax; call 0x3100; nop; pop rbp; ret; 
0x0000000000401008: mov rax, qword ptr [rip + 0x2fd1]; test rax, rax; je 0x3016; call rax; 
0x00000000004011ee: mov rbp, rsp; call 0x3170; mov byte ptr [rip + 0x2e7b], 1; pop rbp; ret; 
0x0000000000401148: mov rdi, 0x401216; call qword ptr [rip + 0x2e83]; hlt; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x000000000040129f: mov rdi, rax; call 0x3100; nop; pop rbp; ret; 
0x0000000000401158: nop dword ptr [rax + rax]; endbr64; ret; 
0x0000000000401157: nop dword ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401156: nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401392: nop; leave; ret; 
0x0000000000401260: nop; pop rbp; ret; 
0x000000000040118f: nop; ret; 
0x0000000000401007: or byte ptr [rax - 0x75], cl; add eax, 0x2fd1; test rax, rax; je 0x3016; call rax; 
0x0000000000401186: or dword ptr [rdi + 0x404058], edi; jmp rax; 
0x00000000004011fd: pop rbp; ret; 
0x00000000004011ed: push rbp; mov rbp, rsp; call 0x3170; mov byte ptr [rip + 0x2e7b], 1; pop rbp; ret; 
0x0000000000401405: ret 0x8b48; 
0x000000000040105a: ret 0xffff; 
0x000000000040101a: ret; 
0x0000000000401011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x000000000040100b: shr dword ptr [rdi], 1; add byte ptr [rax], al; test rax, rax; je 0x3016; call rax; 
0x0000000000401350: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x335b; call 0x30c0; leave; ret; 
0x0000000000401416: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3421; call 0x30c0; leave; ret; 
0x000000000040150e: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x3519; call 0x30c0; leave; ret; 
0x0000000000401151: sub dword ptr [rsi], 0; add ah, dh; nop word ptr cs:[rax + rax]; endbr64; ret; 
0x0000000000401521: sub esp, 8; add rsp, 8; ret; 
0x0000000000401005: sub esp, 8; mov rax, qword ptr [rip + 0x2fd1]; test rax, rax; je 0x3016; call rax; 
0x0000000000401520: sub rsp, 8; add rsp, 8; ret; 
0x0000000000401004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fd1]; test rax, rax; je 0x3016; call rax; 
0x000000000040115a: test byte ptr [rax], al; add byte ptr [rax], al; add byte ptr [rax], al; endbr64; ret; 
0x0000000000401010: test eax, eax; je 0x3016; call rax; 
0x0000000000401010: test eax, eax; je 0x3016; call rax; add rsp, 8; ret; 
0x0000000000401183: test eax, eax; je 0x3190; mov edi, 0x404058; jmp rax; 
0x00000000004011c5: test eax, eax; je 0x31d0; mov edi, 0x404058; jmp rax; 
0x000000000040100f: test rax, rax; je 0x3016; call rax; 
0x000000000040100f: test rax, rax; je 0x3016; call rax; add rsp, 8; ret; 
0x0000000000401182: test rax, rax; je 0x3190; mov edi, 0x404058; jmp rax; 
0x00000000004011c4: test rax, rax; je 0x31d0; mov edi, 0x404058; jmp rax; 

131 gadgets found
