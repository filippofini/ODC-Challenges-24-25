


Gadgets
=======


0x00000000000011a3: adc al, 0x48; mov eax, dword ptr [rip + 0x2e45]; test rax, rax; je 0x11b8; jmp rax; 
0x0000000000001162: adc eax, 0x76058b48; add byte ptr cs:[rax], al; test rax, rax; je 0x1178; jmp rax; 
0x00000000000011aa: add byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rcx - 1], 0xe0; nop word ptr [rax + rax]; ret; 
0x0000000000001169: add byte ptr [rax - 0x7b], cl; sal byte ptr [rcx + rcx - 1], 0xe0; nop dword ptr [rax]; ret; 
0x000000000000100e: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000001173: add byte ptr [rax], 0; add byte ptr [rax], al; ret; 
0x0000000000001174: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x00000000000014a8: add byte ptr [rax], al; add byte ptr [rsi - 0x3c], bh; nop; nop; leave; ret; 
0x0000000000001056: add byte ptr [rax], al; add cl, ch; ret 0xffff; 
0x00000000000011e0: add byte ptr [rax], al; call 0x10a0; call 0x1150; mov byte ptr [rip + 0x2e55], 1; pop rbp; ret; 
0x00000000000015c2: add byte ptr [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret; 
0x000000000000125a: add byte ptr [rax], al; je 0x1263; call 0x10c0; leave; ret; 
0x0000000000001451: add byte ptr [rax], al; je 0x145a; call 0x10c0; leave; ret; 
0x00000000000014a9: add byte ptr [rax], al; jle 0x1471; nop; nop; leave; ret; 
0x00000000000014fa: add byte ptr [rax], al; mov rdi, rax; call 0x10b0; nop; pop rbp; ret; 
0x0000000000001176: add byte ptr [rax], al; ret; 
0x000000000000100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x000000000000100d: add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x0000000000001168: add byte ptr [rax], al; test rax, rax; je 0x1178; jmp rax; 
0x00000000000011a9: add byte ptr [rax], al; test rax, rax; je 0x11b8; jmp rax; 
0x00000000000011b5: add byte ptr [rax], r8b; ret; 
0x00000000000011f1: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000000014aa: add byte ptr [rsi - 0x3c], bh; nop; nop; leave; ret; 
0x00000000000011df: add byte ptr cs:[rax], al; call 0x10a0; call 0x1150; mov byte ptr [rip + 0x2e55], 1; pop rbp; ret; 
0x0000000000001167: add byte ptr cs:[rax], al; test rax, rax; je 0x1178; jmp rax; 
0x00000000000011a8: add byte ptr cs:[rax], al; test rax, rax; je 0x11b8; jmp rax; 
0x0000000000001058: add cl, ch; ret 0xffff; 
0x00000000000011a6: add eax, 0x2e45; test rax, rax; je 0x11b8; jmp rax; 
0x0000000000001165: add eax, 0x2e76; test rax, rax; je 0x1178; jmp rax; 
0x000000000000100a: add eax, 0x2fd9; test rax, rax; je 0x1016; call rax; 
0x0000000000001454: add eax, 0xfffc66e8; dec ecx; ret; 
0x000000000000125d: add eax, 0xfffe5de8; dec ecx; ret; 
0x0000000000001017: add esp, 8; ret; 
0x0000000000001016: add rsp, 8; ret; 
0x0000000000001257: and eax, 0x28; je 0x1263; call 0x10c0; leave; ret; 
0x000000000000144e: and eax, 0x28; je 0x145a; call 0x10c0; leave; ret; 
0x00000000000011e2: call 0x10a0; call 0x1150; mov byte ptr [rip + 0x2e55], 1; pop rbp; ret; 
0x00000000000014ff: call 0x10b0; nop; pop rbp; ret; 
0x000000000000125e: call 0x10c0; leave; ret; 
0x00000000000011e7: call 0x1150; mov byte ptr [rip + 0x2e55], 1; pop rbp; ret; 
0x0000000000001014: call rax; 
0x0000000000001014: call rax; add rsp, 8; ret; 
0x0000000000001160: clc; je 0x1178; mov rax, qword ptr [rip + 0x2e76]; test rax, rax; je 0x1178; jmp rax; 
0x00000000000014a6: cld; mov dword ptr [rax], 0xc47e0000; nop; nop; leave; ret; 
0x00000000000015c7: cli; sub rsp, 8; add rsp, 8; ret; 
0x0000000000001003: cli; sub rsp, 8; mov rax, qword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; 
0x00000000000014a4: cmp dword ptr [rbp - 4], 0xc7; jle 0x1471; nop; nop; leave; ret; 
0x00000000000011dd: cmp eax, 0x2e26; call 0x10a0; call 0x1150; mov byte ptr [rip + 0x2e55], 1; pop rbp; ret; 
0x000000000000115f: cmp eax, edi; je 0x1178; mov rax, qword ptr [rip + 0x2e76]; test rax, rax; je 0x1178; jmp rax; 
0x000000000000115e: cmp rax, rdi; je 0x1178; mov rax, qword ptr [rip + 0x2e76]; test rax, rax; je 0x1178; jmp rax; 
0x00000000000015c1: cmpsd dword ptr [rsi], dword ptr [rdi]; add byte ptr [rax], al; endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000001262: dec ecx; ret; 
0x00000000000015c4: endbr64; sub rsp, 8; add rsp, 8; ret; 
0x0000000000001000: endbr64; sub rsp, 8; mov rax, qword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; 
0x000000000000100b: fldcw word ptr [rdi]; add byte ptr [rax], al; test rax, rax; je 0x1016; call rax; 
0x0000000000001006: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2fd9; test rax, rax; je 0x1016; call rax; 
0x0000000000001166: jbe 0x1196; add byte ptr [rax], al; test rax, rax; je 0x1178; jmp rax; 
0x0000000000001012: je 0x1016; call rax; 
0x0000000000001012: je 0x1016; call rax; add rsp, 8; ret; 
0x000000000000116d: je 0x1178; jmp rax; 
0x0000000000001161: je 0x1178; mov rax, qword ptr [rip + 0x2e76]; test rax, rax; je 0x1178; jmp rax; 
0x00000000000011ae: je 0x11b8; jmp rax; 
0x00000000000011a2: je 0x11b8; mov rax, qword ptr [rip + 0x2e45]; test rax, rax; je 0x11b8; jmp rax; 
0x000000000000125c: je 0x1263; call 0x10c0; leave; ret; 
0x0000000000001453: je 0x145a; call 0x10c0; leave; ret; 
0x00000000000014a5: jge 0x14a3; mov dword ptr [rax], 0xc47e0000; nop; nop; leave; ret; 
0x00000000000014ab: jle 0x1471; nop; nop; leave; ret; 
0x000000000000103d: jmp qword ptr [rsi - 0x70]; 
0x000000000000116f: jmp rax; 
0x0000000000001263: leave; ret; 
0x00000000000011ec: mov byte ptr [rip + 0x2e55], 1; pop rbp; ret; 
0x00000000000014a7: mov dword ptr [rax], 0xc47e0000; nop; nop; leave; ret; 
0x00000000000011a5: mov eax, dword ptr [rip + 0x2e45]; test rax, rax; je 0x11b8; jmp rax; 
0x0000000000001164: mov eax, dword ptr [rip + 0x2e76]; test rax, rax; je 0x1178; jmp rax; 
0x0000000000001009: mov eax, dword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; 
0x00000000000011dc: mov edi, dword ptr [rip + 0x2e26]; call 0x10a0; call 0x1150; mov byte ptr [rip + 0x2e55], 1; pop rbp; ret; 
0x00000000000014fd: mov edi, eax; call 0x10b0; nop; pop rbp; ret; 
0x00000000000011a4: mov rax, qword ptr [rip + 0x2e45]; test rax, rax; je 0x11b8; jmp rax; 
0x0000000000001163: mov rax, qword ptr [rip + 0x2e76]; test rax, rax; je 0x1178; jmp rax; 
0x0000000000001008: mov rax, qword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; 
0x00000000000011db: mov rdi, qword ptr [rip + 0x2e26]; call 0x10a0; call 0x1150; mov byte ptr [rip + 0x2e55], 1; pop rbp; ret; 
0x00000000000014fc: mov rdi, rax; call 0x10b0; nop; pop rbp; ret; 
0x00000000000011b3: nop dword ptr [rax + rax]; ret; 
0x0000000000001171: nop dword ptr [rax]; ret; 
0x00000000000011b2: nop word ptr [rax + rax]; ret; 
0x00000000000014ae: nop; leave; ret; 
0x00000000000014ad: nop; nop; leave; ret; 
0x0000000000001504: nop; pop rbp; ret; 
0x0000000000001007: or byte ptr [rax - 0x75], cl; add eax, 0x2fd9; test rax, rax; je 0x1016; call rax; 
0x00000000000011f3: pop rbp; ret; 
0x00000000000013a4: ret 0x8b48; 
0x000000000000132b: ret 0xe281; 
0x000000000000105a: ret 0xffff; 
0x000000000000101a: ret; 
0x00000000000011ad: sal byte ptr [rax + rcx - 1], 0xe0; nop word ptr [rax + rax]; ret; 
0x000000000000116c: sal byte ptr [rcx + rcx - 1], 0xe0; nop dword ptr [rax]; ret; 
0x0000000000001011: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000000011a0: sar esi, 1; je 0x11b8; mov rax, qword ptr [rip + 0x2e45]; test rax, rax; je 0x11b8; jmp rax; 
0x000000000000119f: sar rsi, 1; je 0x11b8; mov rax, qword ptr [rip + 0x2e45]; test rax, rax; je 0x11b8; jmp rax; 
0x0000000000001258: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x1263; call 0x10c0; leave; ret; 
0x000000000000144f: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x145a; call 0x10c0; leave; ret; 
0x00000000000015c9: sub esp, 8; add rsp, 8; ret; 
0x0000000000001005: sub esp, 8; mov rax, qword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; 
0x00000000000015c8: sub rsp, 8; add rsp, 8; ret; 
0x0000000000001004: sub rsp, 8; mov rax, qword ptr [rip + 0x2fd9]; test rax, rax; je 0x1016; call rax; 
0x0000000000001010: test eax, eax; je 0x1016; call rax; 
0x0000000000001010: test eax, eax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000000116b: test eax, eax; je 0x1178; jmp rax; 
0x00000000000011ac: test eax, eax; je 0x11b8; jmp rax; 
0x000000000000100f: test rax, rax; je 0x1016; call rax; 
0x000000000000100f: test rax, rax; je 0x1016; call rax; add rsp, 8; ret; 
0x000000000000116a: test rax, rax; je 0x1178; jmp rax; 
0x00000000000011ab: test rax, rax; je 0x11b8; jmp rax; 

113 gadgets found
